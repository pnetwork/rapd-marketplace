---
{{- $secret := (lookup "v1" "Secret" .Release.Namespace (printf "%s-rabbitmq" .Release.Name)) -}}
# Source: pare-rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-rabbitmq
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: pare-rabbitmq
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
{{- if $secret }}
  rabbitmq-password: {{ index $secret.data "rabbitmq-password" }}
  rabbitmq-erlang-cookie: {{ index $secret.data "rabbitmq-erlang-cookie" }}
{{- else }}
  rabbitmq-password: {{ randAlphaNum 32 | b64enc |quote }}
  rabbitmq-erlang-cookie:  {{ randAlphaNum 32 | b64enc |quote }}
{{- end }}
---
# Source: pare-rabbitmq/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-rabbitmq-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: pare-rabbitmq
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  rabbitmq.conf: |
    ## Username and password
    ##
    default_user = user
    ## Clustering
    ##
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal

    # queue master locator
    queue_master_locator = min-masters
    # enable loopback user
    loopback_users.user = false
    #default_vhost = default-vhost
    #disk_free_limit.absolute = 50MB
---
{{- $secret := (lookup "v1" "Secret" .Release.Namespace (printf "%s-rabbitmq-pare-eventing-from-claim" .Release.Name)) -}}
apiVersion: v1
{{- if $secret }}
data:
  {{- $secretObj := (lookup "v1" "Secret" $.Release.Namespace  (printf "%s-rabbitmq-pare-eventing-from-claim" .Release.Name)) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- if  $secretData }}
    {{- range $oldkey, $oldvalue := $secretData }}
    {{ $oldkey }}: {{ $oldvalue | quote }}
    {{- end }}
  {{- end }}
{{- else }}
stringData:
  rabbitmq-pare-eventing-from-claim: |
    INSTANCE_NAME=rabbitmq-management-instance-1
    BROKER_NAME=event
    HOST={{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}
    PORT=5672
    USERNAME=event
    PASSWORD={{ randAlphaNum 32 }}
{{- end }}
kind: Secret
metadata:
  name: {{ .Release.Name }}-rabbitmq-pare-eventing-from-claim
type: Opaque
