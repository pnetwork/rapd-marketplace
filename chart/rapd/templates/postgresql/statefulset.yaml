---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  labels: &PostgreSQLLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql-server
spec:
  replicas: 1
  selector:
    matchLabels: *PostgreSQLLabels
  serviceName: {{ .Release.Name }}-postgresql-svc
  template:
    metadata:
      labels: *PostgreSQLLabels
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: postgresql-server
        image: "{{ .Values.postgresql.image.repo }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: {{ .Release.Name }}
          mountPath: /var/lib/postgresql/data
        - name: dshm
          mountPath: /dev/shm
        env:
        - name: "PGDATA"
          value: "/bitnami/postgresql/data"
        - name: POSTGRESQL_VOLUME_DIR
          value: "/bitnami/postgresql"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
                command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
#        readinessProbe:
#            failureThreshold: 6
#            initialDelaySeconds: 5
#            periodSeconds: 10
#            successThreshold: 1
#            timeoutSeconds: 5
#            exec:
#                command:
#                - /bin/sh
#                - -c
#                - -e
#                
#                - |
#                    exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
#                    [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}
      labels: *PostgreSQLLabels
    spec:
      accessModes:
      - ReadWriteOnce
#      storageClassName: {{ .Values.postgresql.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
